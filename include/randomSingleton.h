//----------------------------------------------------------------------------
//
//  $Workfile: randomSingleton.h$
//
//  $Revision: X$
//
//  Modification History:
//  $Log:
//  $
//
//  Notes:
//     This is a singleton for dealing with a random number that is predictable
//
//----------------------------------------------------------------------------
#ifndef RANDOM_SINGLETON_H
#define RANDOM_SINGLETON_H

//----------------------------------------------------------------------------
//  Includes
//----------------------------------------------------------------------------
#include <memory>

//----------------------------------------------------------------------------
//  Class Declarations
//----------------------------------------------------------------------------
//
// Class Name: RandomSingleton
// 
// Purpose:
//      The RandomSingleton
//
//----------------------------------------------------------------------------
class RandomSingleton
{
  public:
    //----------------------------------------------------------------------------
    //  Class Methods
    //----------------------------------------------------------------------------
    static RandomSingleton &GetInstance();
    int Next();
    int Next(int total);
    int Next(int start, int end);

  private:
    //----------------------------------------------------------------------------
    //  Class Atributes
    //----------------------------------------------------------------------------
    static std::shared_ptr<RandomSingleton> sInstance;

    //----------------------------------------------------------------------------
    //  Class Methods
    //----------------------------------------------------------------------------
    RandomSingleton();

};
#endif
